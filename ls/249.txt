//
// Created by liu on 2023/5/5.
//
#include<iostream>
using namespace std;
const long long N = 10;
long long jz[N][N];
long long n;
typedef pair<long long, long long> PII;
PII d[100010];
int h;
void cd() {
    for (long long k = 0; k < n; k++) {
        for (long long i = 0; i < n; i++) {
            for (long long j = 0; j < n; j++) {
                jz[i][j] = jz[i][j] | (jz[i][k] & jz[k][j]); // 将a[i][j]和a[i][k]&a[k][j]做或运算
            }
        }
    }
}

bool check() {
    long long jzs[N][N];
    for (long long i = 0; i < n; i ++) {
        for (long long j = 0; j < n; j ++) {
            jzs[i][j] = jz[i][j];
        }
    }
    cd();
    for (long long i = 0; i < n; i ++) {
        for (long long j = 0; j < n; j ++) {
            if (jzs[i][j] != jz[i][j]) {
                return false;
            }
        }
    }
    return true;
}

int main() {
    cin >> n;
    for (long long i = 0; i < n; i ++) {
        jz[i][i] = 1;
    }
    for (int i = 0; i < n; i ++) {
        for (int j = 0; j < n; j ++) {
            if (i != j) {
                d[h ++] = {i, j};
            }
        }
    }
    long long cnt = 0;
    for (long long i = 0; i < (long long)1 << (long long)(n * n - n); i ++) {
        for (long long j = 0; j < (long long)(n * n - n); j ++) {
            if (((i >> j) & 1) == 1) {
                jz[d[j].first][d[j].second] = 1;
            }else {
                jz[d[j].first][d[j].second] = 0;
            }
        }
        if (check()) {
            cnt ++;
        }
    }
    cout << cnt - 1;
}