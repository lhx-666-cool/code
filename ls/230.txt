//
// Created by liu on 2023/4/26.
//
#include <iostream>
#include <algorithm>
#include<string>
#include<queue>
#include<cctype>
#include<map>
#include<vector>

using namespace std;

typedef pair<int, int> PII;
const int N = 210, M = N * N / 2;
priority_queue<string, vector<string> , greater<>> p;
int n, m, cnt;

typedef vector<string> sv;
map<string, sv> e;
map<string, int>d;
sv res;

void topsort() {
    for (auto &a : d) {
        if (!a.second) {
            p.push(a.first);
        }
    }
    while (!p.empty()) {
        auto t = p.top();
        p.pop();
        res.push_back(t);
        cnt ++;
        for (auto & i : e[t]) {
            auto j = i;
            if (--d[j] == 0) {
                p.push(j);
            }
        }
    }
}

int main() {
    cin >> n >> m;
    int k = 0;
    string a, b, temp;
    getline(cin, temp);
    for (int i = 0; i < m; i++) {
        getline(cin, temp);
        int index = 0;
        for (int j = 1; j < temp.length(); j ++) {
            if (isupper(temp[j])) {
                index = j;
            }
        }
        int x, y;
        a = temp.substr(0, index - 1);
        b = temp.substr(index);
        e[a].push_back(b);
        d.insert({a, 0});
        d[b] ++;
    }

    topsort();
    if (cnt == 0) {
        cout << "impossible";
    } else {
        for (auto i : res) {
            cout << i << " ";
        }
    }
    return 0;
}