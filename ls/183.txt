#include<iostream>
#include<cstring>

using namespace std;

const int N = 110;
int n;
int f[N][N], back[N][N];

void zf() {
    for (int i = 0; i < n; i++) {
        back[i][i] = 1;
    }
}
void dc() {
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            back[i][j] = back[i][j] | back[j][i]; // 将a[i][j]和a[j][i]做或运算
            back[j][i] = back[i][j]; // 将结果赋给a[j][i]
        }
    }
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cin >> n;
	for (int i = 0; i < n; i ++) 
		for (int j = 0; j < n; j ++) 
			cin >> f[i][j];

	memcpy(back, f, sizeof f);

	zf();

	cout << "r(R):" << endl;
	for (int i = 0; i < n; i ++) {
		for (int j = 0; j < n; j ++) 
			cout << back[i][j] << " ";
		cout << endl;
	}

	memcpy(back, f, sizeof f);

	dc();

	cout << "s(R):" << endl;
	for (int i = 0; i < n; i ++) {
		for (int j = 0; j < n; j ++) 
			cout << back[i][j] << " ";
		cout << endl;
	}

}